apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "thelounge.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "thelounge.name" . }}
    helm.sh/chart: {{ include "thelounge.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
{{- if .Values.strategy }}
  strategy:
{{ toYaml .Values.strategy | indent 4 }}
{{ if eq .Values.strategy.type "Recreate" }}
    rollingUpdate: null
{{- end }}
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "thelounge.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/name: {{ include "thelounge.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.dnsConfig }}
      dnsConfig:
        {{- toYaml .Values.dnsConfig | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ tpl .Values.image.tag . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "thelounge"
            - "start"
            - "-c"
            - "reverseProxy={{ .Values.thelounge.reverseProxy }}"
            - "-c"
            - "public={{ .Values.thelounge.public }}"
          env:
            - name: PORT
              value: "9000"
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
          - name: thelounge-data
            mountPath: /var/opt/thelounge
          - name: thelounge-config
            mountPath: /var/opt/thelounge/config.js
            subPath: config.js
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: thelounge-config
        configMap:
          name: {{ template "thelounge.fullname" . }}
      - name: thelounge-data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "thelounge.fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
